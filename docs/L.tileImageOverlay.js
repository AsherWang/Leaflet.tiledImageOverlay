!function(t,o){"function"==typeof define&&define.amd?define(["leaflet"],t):"object"==typeof exports&&(module.exports=t(require("leaflet"))),void 0!==o&&o.L&&(o.L.tileImageOverlay=t(L))}(function(h){var o=h.LayerGroup.extend({initialize:function(t){(this._opts=t).width=t.width||t.blockSize*t.col,t.height=t.height||t.blockSize*t.row;var o=t.blockSize,i=[];this._images=[];for(var e=0;e<t.row;e+=1)for(var a=0;a<t.col;a+=1){var s=t.images?t.images[e*t.col+a]:t.tileUrl.replace("{x}",t.startX+a).replace("{y}",t.startY+e).replace("{z}",t.z);this._images.push(s);var n=[[-o*e,o*a],[-o*(e+1),o*(a+1)]];i.push(h.imageOverlay(s,n))}h.LayerGroup.prototype.initialize.call(this,i),this.on("add",function(){t.autoFit&&this._autoFit()})},_autoFit:function(){map=this._map;var t=[[0,0],[-this._opts.height,this._opts.width]],o=[-this._opts.height/2,this._opts.width/2],i=Math.min(Math.abs(t[0][0]-t[1][0]),Math.abs(t[0][1]-t[1][1]))/2,e=[[o[0]+i,o[1]-i],[o[0]-i,o[1]+i]],a=map.getBoundsZoom(e,!0),s=map.getBoundsZoom(t,!1),n=Math.max(a,s+3);if(this._opts.onAutoFit){var r={minZoom:s,z:a,maxZoom:n,center:o,maxBounds:t};this._opts.onAutoFit(r)}else map.setView(o,a).setMaxBounds(t).setMinZoom(s).setMaxZoom(n);this._opts.debug&&(h.marker(o).addTo(map),this._addPolygon(t),this._addPolygon(e,"blue"),console.log("_images",this._images))},_addPolygon:function(t,o){o=o||"red";var i=t[0],e=t[1],a=[i,[i[0],e[1]],e,[e[0],i[1]]];h.polygon(a,{color:o}).addTo(this._map)}});return function(t){return new o(t)}},window);
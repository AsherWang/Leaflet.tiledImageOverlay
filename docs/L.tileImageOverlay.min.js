!function(t,e){"function"==typeof define&&define.amd?define(["leaflet"],t):"object"==typeof exports&&(module.exports=t(require("leaflet"))),void 0!==e&&e.L&&(e.L.tileImageOverlay=t(L))}(t=>{const e=t.LayerGroup.extend({initialize(e){this._opts=e,e.images||e.tileUrl?(this._opts.width=e.width||e.blockSize*e.col,this._opts.height=e.height||e.blockSize*e.row,this._addImages(!1)):t.canvasOverlay?(this._opts.width=e.width||e.image.width,this._opts.height=e.height||e.image.height,this._opts.col=Math.ceil(e.image.width/e.blockSize),this._opts.row=Math.ceil(e.image.height/e.blockSize),this._addImages(!0)):console.warn("do you forget to add script L.canvasOverlay?")},_addImages(e){const o=this._opts,i=[];this._images=[];const s=o.subdomains||"abc",{blockSize:a}=o;for(let h=0;h<o.row;h+=1)for(let n=0;n<o.col;n+=1){const l=[[-a*h,a*n],[-a*(h+1),a*(n+1)]];if(e){const e=a*n,s=a*h;i.push(t.canvasOverlay(l,{drawFn(t,i,h){t.drawImage(o.image,e,s,a,a,0,0,i,h)}}))}else{const e=o.startX+n,a=o.startY+h,d=o.images?o.images[h*o.col+n]:o.tileUrl.replace("{x}",e).replace("{y}",a).replace("{z}",o.z).replace("{s}",s[(e+a)%s.length]);this._images.push(d),i.push(t.imageOverlay(d,l))}}t.LayerGroup.prototype.initialize.call(this,i),this.setZIndex(0),this.on("add",function(){o.autoFit&&this._autoFit()})},_autoFit(){const e=this._map,o=[[0,0],[-this._opts.height,this._opts.width]],i=[-this._opts.height/2,this._opts.width/2],s=Math.min(Math.abs(o[0][0]-o[1][0]),Math.abs(o[0][1]-o[1][1]))/2,a=[[i[0]+s,i[1]-s],[i[0]-s,i[1]+s]],h=e.getBoundsZoom(a,!0),n=e.getBoundsZoom(o,!1),l=Math.max(h,n+3);if(this._opts.onAutoFit){const t={minZoom:n,z:h,maxZoom:l,center:i,maxBounds:o};this._opts.onAutoFit(t)}else e.setView(i,h).setMaxBounds(o).setMinZoom(n).setMaxZoom(l);this._opts.debug&&(t.marker(i).addTo(e),this._addPolygon(o),this._addPolygon(a,"blue"),console.log("_images",this._images))},_addPolygon(e,o="red"){const i=e[0],s=e[1],a=[i,[i[0],s[1]],s,[s[0],i[1]]];t.polygon(a,{color:o}).addTo(this._map)}});return function(t){return new e(t)}},window);